package JMouse;


import java.awt.AWTException;
import java.awt.Point;
import java.awt.Robot;
import javax.swing.JWindow;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import napkin.NapkinLookAndFeel;
import java.awt.event.KeyEvent;
import java.util.Timer;




public class JKeyBoard {
	
	
	private JWindow frame;
	JMButton current;//current selected button
	Robot robot;
	JMButton [][]buttsArr =new JMButton[4][12];//array that include all of the keyboard's buttons
	int jMBI=0,jMBJ=11;//I and J coordinate of the current selected button
	public void setVisible(boolean t){
		frame.setVisible(t);
	}
	char getSelectedButton(int n){
		return current.getObjective(n);
	}
	public void up(){//to move the current selected button upward
		if(jMBI==0){
			jMBI=3;
			if(jMBJ>9){
				jMBJ=9;	
			}
		}
		else {
			jMBI--;
		}
		current.isSelected=false;
		current=buttsArr[jMBI][jMBJ];
		
		current.isSelected=true;
		frame.repaint();
			
	}
	public void down(){//to move the current selected button downward
		if(jMBI==0){
			jMBI++;
		}
		else if(jMBI==1){
			if(jMBJ>10)
				jMBJ=10;
			jMBI++;
		}
		else if(jMBI==2){
			if(jMBJ>9)
				jMBJ=9;
			jMBI++;
		}
		else if(jMBI==3){
			jMBI=0;
		}
		
		current.isSelected=false;
		current=buttsArr[jMBI][jMBJ];
		current.isSelected=true;
		frame.repaint();
	}
	public void left(){//to move the current selected button leftward
		
			if(jMBJ==0){
				switch(jMBI){
				case 0:
				case 1:jMBJ=11;break;
				case 2:jMBJ=10;break;
				case 3:jMBJ=9;
				}
			}
			else
				jMBJ--;
			
			current.isSelected=false;
			current=buttsArr[jMBI][jMBJ];
			current.isSelected=true;
			frame.repaint();
	}
	public void right(){//to move the current selected button rightward
		if(jMBI==0||jMBI==1){
			if(jMBJ==11)
				jMBJ=0;
			else
				jMBJ++;
		}
		else if(jMBI==2){
			if(jMBJ==10)
				jMBJ=0;
			else
				jMBJ++;
		}
		else if(jMBI==3){
			if(jMBJ==9)
				jMBJ=0;
			else
				jMBJ++;
			
		}
		current.isSelected=false;
		current=buttsArr[jMBI][jMBJ];
		current.isSelected=true;
		frame.repaint();
		
	}
	public void click(char c){//to execute the current button
		
		if(robot!=null){
			if(c==current.getObjective(0)||c==current.getObjective(1)){//this if-statement indicate s if the variable c is generated by clicking the current selected button
				if(current.isButtonReady==false){
					return ;
				}
				else{
					Timer t=new Timer();
					current.isButtonReady=false;//set the button to not be ready to be clicked again in the 150 milli seconds  
					TimerEnableButton f=new TimerEnableButton(current); //this timer is used to enable the current button after 150 milli seconds 
					t.schedule(f, 150);
				}
				
			}
		
			switch(c){
				
				case '1':
					robot.keyPress(KeyEvent.VK_1);
					robot.keyRelease(KeyEvent.VK_1);break;

				case '2':
					robot.keyPress(KeyEvent.VK_2);
					robot.keyRelease(KeyEvent.VK_2);break;

				case '3':
					robot.keyPress(KeyEvent.VK_3);
					robot.keyRelease(KeyEvent.VK_3);break;

				case '4':
					robot.keyPress(KeyEvent.VK_4);
					robot.keyRelease(KeyEvent.VK_4);break;

				case '5':
					robot.keyPress(KeyEvent.VK_5);
					robot.keyRelease(KeyEvent.VK_5);break;

				case '6':
					robot.keyPress(KeyEvent.VK_6);
					robot.keyRelease(KeyEvent.VK_6);break;

				case '7':
					robot.keyPress(KeyEvent.VK_7);
					robot.keyRelease(KeyEvent.VK_7);break;

				case '8':
					robot.keyPress(KeyEvent.VK_8);
					robot.keyRelease(KeyEvent.VK_8);break;

				case '9':
					robot.keyPress(KeyEvent.VK_9);
					robot.keyRelease(KeyEvent.VK_9);break;

				case '0':
					robot.keyPress(KeyEvent.VK_0);
					robot.keyRelease(KeyEvent.VK_0);break;
					
				case 8:
					robot.keyPress(KeyEvent.VK_BACK_SPACE);
					robot.keyRelease(KeyEvent.VK_BACK_SPACE);break;
					
				case 'q':
					robot.keyPress(KeyEvent.VK_Q);
					robot.keyRelease(KeyEvent.VK_Q);break;

				case 'w':
					robot.keyPress(KeyEvent.VK_W);
					robot.keyRelease(KeyEvent.VK_W);break;
					
				case 'e':
					robot.keyPress(KeyEvent.VK_E);
					robot.keyRelease(KeyEvent.VK_E);break;
					
				case 'r':
					robot.keyPress(KeyEvent.VK_R);
					robot.keyRelease(KeyEvent.VK_R);break;
					
					
				case 't':
					robot.keyPress(KeyEvent.VK_T);
					robot.keyRelease(KeyEvent.VK_T);break;
					
					
				case 'y':
					robot.keyPress(KeyEvent.VK_Y);
					robot.keyRelease(KeyEvent.VK_Y);break;
					
					
				case 'u':
					robot.keyPress(KeyEvent.VK_U);
					robot.keyRelease(KeyEvent.VK_U);break;
					
					
				case 'i':
					robot.keyPress(KeyEvent.VK_I);
					robot.keyRelease(KeyEvent.VK_I);break;
					
				case 'o':
					robot.keyPress(KeyEvent.VK_O);
					robot.keyRelease(KeyEvent.VK_O);break;
					
				case 'p':
					robot.keyPress(KeyEvent.VK_P);
					robot.keyRelease(KeyEvent.VK_P);break;
				
					
				case '\\':
					robot.keyPress(KeyEvent.VK_BACK_SLASH);
					robot.keyRelease(KeyEvent.VK_BACK_SLASH);break;
					
				case 'a':
					robot.keyPress(KeyEvent.VK_A);
					robot.keyRelease(KeyEvent.VK_A);break;
					
				case 's':
					robot.keyPress(KeyEvent.VK_S);
					robot.keyRelease(KeyEvent.VK_S);break;
					
				case 'c':
					robot.keyPress(KeyEvent.VK_C);
					robot.keyRelease(KeyEvent.VK_C);break;
					
				case 'd':
					robot.keyPress(KeyEvent.VK_D);
					robot.keyRelease(KeyEvent.VK_D);break;
					
				case 'f':
					robot.keyPress(KeyEvent.VK_F);
					robot.keyRelease(KeyEvent.VK_F);break;
					
				case 'g':
					robot.keyPress(KeyEvent.VK_G);
					robot.keyRelease(KeyEvent.VK_G);break;
					
				case 'h':
					robot.keyPress(KeyEvent.VK_H);
					robot.keyRelease(KeyEvent.VK_H);break;

				case 'j':
					robot.keyPress(KeyEvent.VK_J);
					robot.keyRelease(KeyEvent.VK_J);break;
					

				case 'k':
					robot.keyPress(KeyEvent.VK_K);
					robot.keyRelease(KeyEvent.VK_K);break;

				case 'l':
					robot.keyPress(KeyEvent.VK_L);
					robot.keyRelease(KeyEvent.VK_L);break;
					

				case ';':
					robot.keyPress(KeyEvent.VK_SEMICOLON);
					robot.keyRelease(KeyEvent.VK_SEMICOLON);break;
					

				case '\'':
					robot.keyPress(KeyEvent.VK_QUOTE);
					robot.keyRelease(KeyEvent.VK_QUOTE);break;

				case 'z':
					robot.keyPress(KeyEvent.VK_Z);
					robot.keyRelease(KeyEvent.VK_Z);break;
					
				case '\n':
					robot.keyPress(KeyEvent.VK_ENTER);
					robot.keyRelease(KeyEvent.VK_ENTER);break;
				case 'x':
					robot.keyPress(KeyEvent.VK_X);
					robot.keyRelease(KeyEvent.VK_X);break;
					
				case 'v':
					robot.keyPress(KeyEvent.VK_V);
					robot.keyRelease(KeyEvent.VK_V);break;

				case 'b':
					robot.keyPress(KeyEvent.VK_B);
					robot.keyRelease(KeyEvent.VK_B);break;


				case 'n':
					robot.keyPress(KeyEvent.VK_N);
					robot.keyRelease(KeyEvent.VK_N);break;
					


				case 'm':
					robot.keyPress(KeyEvent.VK_M);
					robot.keyRelease(KeyEvent.VK_M);break;
					


				case ',':
					robot.keyPress(KeyEvent.VK_COMMA);
					robot.keyRelease(KeyEvent.VK_COMMA);break;
					


				case '.':
					robot.keyPress(KeyEvent.VK_PERIOD);
					robot.keyRelease(KeyEvent.VK_PERIOD);break;

				case ' ':
					robot.keyPress(KeyEvent.VK_SPACE);
					robot.keyRelease(KeyEvent.VK_SPACE);break;
					

				case '/':
					robot.keyPress(KeyEvent.VK_SLASH);
					robot.keyRelease(KeyEvent.VK_SLASH);break;
				case ']':
					robot.keyPress(KeyEvent.VK_CLOSE_BRACKET);
					robot.keyRelease(KeyEvent.VK_CLOSE_BRACKET);break;
				case '[':
					robot.keyPress(KeyEvent.VK_OPEN_BRACKET);
					robot.keyRelease(KeyEvent.VK_OPEN_BRACKET);break;
				case '=':
					robot.keyPress(KeyEvent.VK_EQUALS);
					robot.keyRelease(KeyEvent.VK_EQUALS);break;
				case '-':
					robot.keyPress(KeyEvent.VK_MINUS);
					robot.keyRelease(KeyEvent.VK_MINUS);break;
					
					
			}
		}
	}
	public void setText(int n){// to set text of buttons (if shift is pressed pass 1 otherwise 0)
		if(n==0||n==1)
		for(int i=0;i<4;i++)
			for(int j=0;j<12;j++){
				if(buttsArr[i][j]!=null)
					buttsArr[i][j].setText(String.valueOf(buttsArr[i][j].getObjective(n)));
			}
		
	}
public void setLocation(Point p){
	frame.setLocation(p);
}
public Point getLocation(){
	return frame.getLocation();
}

	/**
	 * Create the application.
	 */
	public JKeyBoard() {
		initialize();
		try {
			robot =new Robot();
		} catch (AWTException e) {
			// TODO Auto-generated catch block
			System.out.println("an error has occurred ,coudn't initilize robot");
			System.exit(-1);
		}
		current=buttsArr[jMBI][jMBJ];
		current.isSelected=true;
		setText(0);
		frame.setSize(760,150);
		frame.setLocationRelativeTo(null);
		frame.setLocation(20, 20);
		try {
			UIManager.setLookAndFeel(new NapkinLookAndFeel());
		} catch (UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	void initializingButtons(){
		
		
	}
	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JWindow();
		frame.setSize(800,200);
		frame.setLocationRelativeTo(null);
		frame.setLocation(20, 20);
		frame.setAlwaysOnTop(true);
		frame.getContentPane().setLayout(null);
		
		JMButton btnNewButton = new JMButton("1");
		btnNewButton.setBounds(12, 12, 54, 25);
		frame.getContentPane().add(btnNewButton);
		btnNewButton.setObjective('1', '!');
		buttsArr[0][0]=btnNewButton;
		
		JMButton btnNewButton_1 = new JMButton("2");
		btnNewButton_1.setBounds(76, 12, 54, 25);
		frame.getContentPane().add(btnNewButton_1);
		btnNewButton_1.setObjective('2', '@');
		buttsArr[0][1]=btnNewButton_1;
		
		JMButton button_1 = new JMButton("3");
		button_1.setBounds(140, 12, 54, 25);
		frame.getContentPane().add(button_1);
		button_1.setObjective('3', '#');
		buttsArr[0][2]=button_1;
		
		JMButton button_2 = new JMButton("4");
		button_2.setBounds(197, 12, 54, 25);
		frame.getContentPane().add(button_2);
		button_2.setObjective('4', '$');
		buttsArr[0][3]=button_2;
		
		
		JMButton button_3 = new JMButton("5");
		button_3.setBounds(261, 12, 54, 25);
		frame.getContentPane().add(button_3);
		button_3.setObjective('5', '%');
		buttsArr[0][4]=button_3;
		
		JMButton button_4 = new JMButton("6");
		button_4.setBounds(327, 12, 54, 25);
		frame.getContentPane().add(button_4);
		button_4.setObjective('6', '^');
		buttsArr[0][5]=button_4;
		
		
		JMButton button_5 = new JMButton("7");
		button_5.setBounds(391, 12, 54, 25);
		frame.getContentPane().add(button_5);
		button_5.setObjective('7', '&');
		buttsArr[0][6]=button_5;
		
		JMButton button_6 = new JMButton("8");
		button_6.setBounds(455, 12, 54, 25);
		frame.getContentPane().add(button_6);
		button_6.setObjective('8', '*');
		buttsArr[0][7]=button_6;
		
		JMButton button_7 = new JMButton("9");
		button_7.setBounds(515, 12, 54, 25);
		frame.getContentPane().add(button_7);
		button_7.setObjective('9', '(');
		buttsArr[0][8]=button_7;
		
		JMButton button_8 = new JMButton("0");
		button_8.setBounds(573, 12, 54, 25);
		frame.getContentPane().add(button_8);
		button_8.setObjective('0', ')');
		buttsArr[0][9]=button_8;
		
		JMButton button_9 = new JMButton("-");
		button_9.setBounds(637, 12, 54, 25);
		frame.getContentPane().add(button_9);
		button_9.setObjective('-', '_');
		buttsArr[0][10]=button_9;
		
		JMButton button_10 = new JMButton("=");
		button_10.setBounds(702, 12, 54, 25);
		frame.getContentPane().add(button_10);
		button_10.setObjective('=', '+');
		buttsArr[0][11]=button_10;
		
		//finished first row
		
		
		
		JMButton btnQ = new JMButton("q");
		btnQ.setBounds(12, 44, 54, 25);
		frame.getContentPane().add(btnQ);
		btnQ.setObjective('q', 'Q');
		buttsArr[1][0]=btnQ;
		
		JMButton btnW = new JMButton("w");
		btnW.setBounds(76, 44, 54, 25);
		frame.getContentPane().add(btnW);
		btnW.setObjective('w', 'W');
		buttsArr[1][1]=btnW;
		
		JMButton btnE = new JMButton("e");
		btnE.setBounds(140, 44, 54, 25);
		frame.getContentPane().add(btnE);
		btnE.setObjective('e', 'E');
		buttsArr[1][2]=btnE;
		
		JMButton btnR = new JMButton("r");
		btnR.setBounds(197, 44, 54, 25);
		frame.getContentPane().add(btnR);
		btnR.setObjective('r', 'R');
		buttsArr[1][3]=btnR;
		
		JMButton btnT = new JMButton("t");
		btnT.setBounds(261, 44, 54, 25);
		frame.getContentPane().add(btnT);
		btnT.setObjective('t', 'T');
		buttsArr[1][4]=btnT;
		
		JMButton btnY = new JMButton("y");
		btnY.setBounds(327, 44, 54, 25);
		frame.getContentPane().add(btnY);
		btnY.setObjective('y', 'Y');
		buttsArr[1][5]=btnY;
		
		JMButton btnU = new JMButton("u");
		btnU.setBounds(391, 44, 54, 25);
		frame.getContentPane().add(btnU);
		btnU.setObjective('u', 'U');
		buttsArr[1][6]=btnU;
		
		JMButton btnI = new JMButton("i");
		btnI.setBounds(455, 44, 54, 25);
		frame.getContentPane().add(btnI);
		btnI.setObjective('i', 'I');
		buttsArr[1][7]=btnI;
		
		JMButton btnO = new JMButton("o");
		btnO.setBounds(515, 44, 54, 25);
		frame.getContentPane().add(btnO);
		btnO.setObjective('o', 'O');
		buttsArr[1][8]=btnO;
		
		JMButton btnP = new JMButton("p");
		btnP.setBounds(573, 44, 54, 25);
		frame.getContentPane().add(btnP);
		btnP.setObjective('p', 'P');
		buttsArr[1][9]=btnP;
		
		JMButton button_13 = new JMButton("[");
		button_13.setBounds(637, 44, 54, 25);
		frame.getContentPane().add(button_13);
		button_13.setObjective('[', '{');
		buttsArr[1][10]=button_13;
		
		JMButton button_14 = new JMButton("]");
		button_14.setBounds(702, 44, 54, 25);
		frame.getContentPane().add(button_14);
		button_14.setObjective(']', '}');
		buttsArr[1][11]=button_14;
		
		//finished second
		
		JMButton btnNewButton_2 = new JMButton("a");
		btnNewButton_2.setBounds(12, 80, 54, 25);
		frame.getContentPane().add(btnNewButton_2);
		btnNewButton_2.setObjective('a', 'A');
		buttsArr[2][0]=btnNewButton_2;
		
		JMButton btnS = new JMButton("S");
		btnS.setBounds(71, 80, 54, 25);
		frame.getContentPane().add(btnS);
		btnS.setObjective('s', 'S');
		buttsArr[2][1]=btnS;
		
		JMButton btnD = new JMButton("D");
		btnD.setBounds(134, 80, 54, 25);
		frame.getContentPane().add(btnD);
		btnD.setObjective('d', 'D');
		buttsArr[2][2]=btnD;
		
		JMButton btnF = new JMButton("F");
		btnF.setBounds(197, 80, 54, 25);
		frame.getContentPane().add(btnF);
		btnF.setObjective('f', 'F');
		buttsArr[2][3]=btnF;
		
		JMButton btnG = new JMButton("G");
		btnG.setBounds(261, 80, 54, 25);
		frame.getContentPane().add(btnG);
		btnG.setObjective('g', 'G');
		buttsArr[2][4]=btnG;
		
		JMButton btnH = new JMButton("H");
		btnH.setBounds(327, 80, 54, 25);
		frame.getContentPane().add(btnH);
		btnH.setObjective('h', 'H');
		buttsArr[2][5]=btnH;
		
		JMButton btnJ = new JMButton("J");
		btnJ.setBounds(391, 80, 54, 25);
		frame.getContentPane().add(btnJ);
		btnJ.setObjective('j', 'J');
		buttsArr[2][6]=btnJ;
		
		JMButton btnK = new JMButton("K");
		btnK.setBounds(455, 80, 54, 25);
		frame.getContentPane().add(btnK);
		btnK.setObjective('k', 'K');
		buttsArr[2][7]=btnK;
		
		JMButton btnL = new JMButton("L");
		btnL.setBounds(515, 80, 54, 25);
		frame.getContentPane().add(btnL);
		btnL.setObjective('l', 'L');
		buttsArr[2][8]=btnL;
		
		JMButton button_11 = new JMButton(";");
		button_11.setBounds(573, 80, 54, 25);
		frame.getContentPane().add(button_11);
		button_11.setObjective(';', ':');
		buttsArr[2][9]=button_11;
		
		JMButton button_12 = new JMButton("\"");
		button_12.setBounds(637, 80, 54, 25);
		frame.getContentPane().add(button_12);
		button_12.setObjective('\'', '\"');
		buttsArr[2][10]=button_12;
		//finished third row
		
		JMButton btnZ = new JMButton("z");
		btnZ.setBounds(12, 117, 54, 25);
		frame.getContentPane().add(btnZ);
		btnZ.setObjective('z', 'Z');
		buttsArr[3][0]=btnZ;
		
		JMButton btnX = new JMButton("x");
		btnX.setBounds(75, 117, 54, 25);
		frame.getContentPane().add(btnX);
		btnX.setObjective('x', 'X');
		buttsArr[3][1]=btnX;
		
		JMButton btnC = new JMButton("c");
		btnC.setBounds(134, 117, 54, 25);
		frame.getContentPane().add(btnC);
		btnC.setObjective('c', 'C');
		buttsArr[3][2]=btnC;
		
		JMButton btnV = new JMButton("v");
		btnV.setBounds(195, 117, 54, 25);
		frame.getContentPane().add(btnV);
		btnV.setObjective('v', 'V');
		buttsArr[3][3]=btnV;
		
		JMButton btnB = new JMButton("b");
		btnB.setBounds(264, 117, 54, 25);
		frame.getContentPane().add(btnB);
		btnB.setObjective('b', 'B');
		buttsArr[3][4]=btnB;
		
		JMButton btnN = new JMButton("n");
		btnN.setBounds(330, 117, 54, 25);
		frame.getContentPane().add(btnN);
		btnN.setObjective('n', 'N');
		buttsArr[3][5]=btnN;
		
		JMButton btnM = new JMButton("m");
		btnM.setBounds(396, 117, 54, 25);
		frame.getContentPane().add(btnM);
		btnM.setObjective('m', 'M');
		buttsArr[3][6]=btnM;
		
		
		JMButton button_15 = new JMButton(",");
		button_15.setBounds(459, 117, 54, 25);
		frame.getContentPane().add(button_15);
		button_15.setObjective(',', '<');
		buttsArr[3][7]=button_15;
		
		JMButton button_16 = new JMButton(".");
		button_16.setBounds(525, 117, 44, 25);
		frame.getContentPane().add(button_16);
		button_16.setObjective('.', '>');
		buttsArr[3][8]=button_16;
		
		JMButton button_17 = new JMButton("/");
		button_17.setBounds(585, 117, 54, 25);
		frame.getContentPane().add(button_17);
		button_17.setObjective('/', '?');
		buttsArr[3][9]=button_17;
		
		//finished forth row
		
	}
}
